!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._data=e,this._handleImageClick=s}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeBtn=this._cardElement.querySelector(".card__button"),this._trashBtn=this._cardElement.querySelector(".card__trash"),this._likeBtn.addEventListener("click",(()=>{this._handleLikeBtn()})),this._trashBtn.addEventListener("click",(()=>{this._handleTrashBtn()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}_handleLikeBtn(){this._likeBtn.classList.toggle("card__button-active")}_handleTrashBtn(){}getView(){return this._element=this._getTemplate(),this._cardImageElement=this._element.querySelector(".card__image"),this._element.querySelector(".card__description").textContent=this._name,this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this._element}}class t{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._errorList=e.errorList}_showInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return this._inputElementsArray=Array.from(this._inputEls),this._inputElementsArray.some((e=>!e.validity.valid))}toggleButtonstate(){this._hasInvalidInput()?this.disableSubmitButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=this._form.querySelectorAll(this._inputSelector),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonstate()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this.toggleButtonstate()}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}}class s{constructor(e){this._popupSelector=e,this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_clickOverlay(e){e.target===this._popupElement&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{this._clickOverlay(e)})),this._closeBtn=this._popupElement.querySelector(".modal__close"),this._closeBtn.addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputEls=this._popupForm.querySelectorAll(".modal__input")}_getInputValues(){return this._inputObj={},this._inputEls.forEach((e=>{this._inputObj[e.id]=e.value})),this._inputObj}reset(){this._popupForm.reset()}setInputValues(e){this._inputEls.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const n=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],i=document.querySelectorAll(".modal__form"),o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",errorList:".modal__error"},a="modal-title-input",l=(document.getElementById(a),"modal-description-input"),c=(document.getElementById(l),"#card-template"),d=document.querySelector("#profile-edit-button"),h=document.querySelector(".profile__add-button"),u={},m=document.querySelector("#delete-card-modal"),_=document.querySelectorAll(".card__trash"),p=document.querySelector("#profile-avatar-edit-button");function E(t){return new e(t,c,g).getView()}function g(e){let{name:t,link:s}=e;b.open({name:t,link:s})}document.querySelector("#change-profile-pic-modal");const f=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.baseUrl=t,this._headers=s}getResult(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this._headers}).then(this.getResult).catch((e=>{console.error(e)}))}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this._headers}).then(this.getResult).catch((e=>{console.error(e)}))}updateUserInfo(e){let{editFormNameInput:t,editFormAboutInput:s}=e;fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.innerText,about:s.innerText})}).then(this.getResult).catch((e=>{console.error(e)}))}addNewCard(e){let{cardElementName:t,cardElementLink:s}=e;fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this.getResult).catch((e=>{console.error(e)}))}deleteCard(e){let{_id:t}=e;fetch(`${this.baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers}).then(this.getResult).catch((e=>{console.error(e)}))}updateProfileImage(e){let{link:t}=e;fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this.getResult).catch((e=>{console.error(e)}))}renderCards(){return Promise.all([this.getInitialCards(),this.getUserInfo()]).then(this.getResult).catch((e=>{console.error(e)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"62fbc1de-42d6-41b7-8bb5-5b0736932e96","Content-Type":"application/json"}});f.getUserInfo().then((e=>{console.log(e)})),f.getInitialCards().then((e=>{console.log(e)})),f.updateUserInfo({editFormNameInput:"Jacques Cousteau",editFormAboutInput:"Explorer"}),f.addNewCard({cardElementName:"test",cardElementLink:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"}),n.forEach((e=>{f.addNewCard({cardElementName:e.name,cardElementLink:e.link})}));const b=new class extends s{constructor(e){super(e),this._picTitle=this._popupElement.querySelector("#open-pic-title"),this._image=this._popupElement.querySelector("#open-pic-image")}open(e){let{name:t,link:s}=e;this._picTitle.textContent=t,this._image.src=s,this._image.alt=t,super.open()}}("#open-pic-modal"),v=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._nameEl=document.querySelector(t),this._jobEl=document.querySelector(s)}getUserInfo(){return{title:this._nameEl.innerText,description:this._jobEl.innerText}}setUserInfo(e,t){this._nameEl.innerText=e,this._jobEl.innerText=t}}({nameSelector:"#js-profile-name",jobSelector:"#js-profile-description"}),y=new r("#profile-add-card-modal",(function(e){y.close();const t=E({name:e["modal-image-title-input"],link:e["modal-link-input"]});k.addItem(t),u["add-card-form"].disableSubmitButton(),y.reset()})),S=new r("#profile-edit-modal",(function(e){const t=e[a],s=e[l];v.setUserInfo(t,s),f.updateUserInfo({nameEl:t,jobEl:s}),S.close()})),I=new r("#change-profile-pic-modal"),k=new class{constructor(e,t){let{items:s,renderer:r}=e;this._renderedItems=s,this._renderer=r,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}addInitialItem(e){this._container.append(e)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}}({items:n,renderer:e=>{const t=E(e);k.addInitialItem(t)}},".cards__list");h.addEventListener("click",(()=>{y.open()})),d.addEventListener("click",(()=>{S.open(),function(){const e=v.getUserInfo();S.setInputValues(e)}()})),_.forEach((e=>{e.addEventListener("click",(()=>{m.open()}))})),p.addEventListener("click",(()=>{})),(e=>{e.forEach((e=>{const s=new t(o,e);return s.enableValidation(),u[e.getAttribute("id")]=s,u}))})(i),y.setEventListeners(),S.setEventListeners(),b.setEventListeners(),I.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,