!function(){"use strict";class e{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this.id=e._id,this._cardSelector=t,this._data=e,this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeClick=r,this._isLiked=e.isLiked}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeBtn=this._cardElement.querySelector(".card__button"),this._trashBtn=this._cardElement.querySelector(".card__trash"),this._likeBtn.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._trashBtn.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}deleteCard(){this._cardElement.remove()}setIsLiked(e){this._isLiked=e,this._renderLikes()}isLiked(){return this._isLiked}_renderLikes(){this._isLiked?this._likeBtn.classList.add("card__button-active"):this._likeBtn.classList.remove("card__button-active")}getView(){return this._element=this._getTemplate(),this._cardImageElement=this._element.querySelector(".card__image"),this._element.querySelector(".card__description").textContent=this._name,this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this._renderLikes(),this._element}}class t{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._errorList=e.errorList}_showInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return this._inputElementsArray=Array.from(this._inputEls),this._inputElementsArray.some((e=>!e.validity.valid))}toggleButtonstate(){this._hasInvalidInput()?this.disableSubmitButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=this._form.querySelectorAll(this._inputSelector),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonstate()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this.toggleButtonstate()}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}}class s{constructor(e){this._popupSelector=e,this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_clickOverlay(e){e.target===this._popupElement&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{this._clickOverlay(e)})),this._closeBtn=this._popupElement.querySelector(".modal__close"),this._closeBtn.addEventListener("click",(()=>{this.close()}))}}class i extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputEls=this._popupForm.querySelectorAll(".modal__input"),this._submitBtn=this._popupElement.querySelector(".modal__save"),this._buttonText=this._submitBtn.textContent}_getInputValues(){return this._inputObj={},this._inputEls.forEach((e=>{this._inputObj[e.id]=e.value})),this._inputObj}reset(){this._popupForm.reset()}setInputValues(e){this._inputEls.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}showUploadingState(){this._submitBtn.innerText="Saving"}showUploaded(){this._submitBtn.innerText=this._buttonText}}class r{constructor(e,t){let{items:s,renderer:i}=e;this._renderedItems=s,this._renderer=i,this._container=document.querySelector(t)}addItem(e){this._container.prepend(e)}addInitialItem(e){this._container.append(e)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}}const n=document.querySelectorAll(".modal__form"),o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",errorList:".modal__error"},a="modal-title-input",l=(document.getElementById(a),"modal-description-input"),d=(document.getElementById(l),"#card-template"),h=document.querySelector("#profile-edit-button"),c=document.querySelector(".profile__add-button"),u={},_=(document.querySelector("#delete-card-modal"),document.querySelectorAll(".card__trash"),document.querySelector("#profile-avatar-edit-button"));let m;document.querySelector("#change-profile-pic-modal"),document.querySelector("#delete-card-modal"),document.querySelector("#delete-card-submit-btn"),document.querySelector(".profile__photo"),document.querySelectorAll(".modal__save");const p=new class extends s{constructor(e){super(e),this._submitBtn=this._popupElement.querySelector(".modal__save"),this._btnText=this._submitBtn.textContent}setSubmitAction(e){this._handleFormSubmit=e}showLoading(){this._submitBtn.innerText="Loading"}showDeleted(){this._submitBtn.innerText=this._submitBtn.textContent}setEventListeners(){super.setEventListeners(),this._submitBtn.addEventListener("click",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}("#delete-card-modal"),E=new class extends s{constructor(e){super(e),this._picTitle=this._popupElement.querySelector("#open-pic-title"),this._image=this._popupElement.querySelector("#open-pic-image")}open(e){let{name:t,link:s}=e;this._picTitle.textContent=t,this._image.src=s,this._image.alt=t,super.open()}}("#open-pic-modal"),b=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:i}=e;this._nameEl=document.querySelector(t),this._jobEl=document.querySelector(s),this._avatarEl=document.querySelector(i)}getUserInfo(){return{title:this._nameEl.innerText,description:this._jobEl.innerText}}setUserInfo(e,t){this._nameEl.innerText=e,this._jobEl.innerText=t}setAvatar(e){this._avatarEl.src=e}}({nameSelector:"#js-profile-name",jobSelector:"#js-profile-description",avatarSelector:"#js-avatar"}),v=new i("#profile-add-card-modal",(function(e){const t=e["modal-image-title-input"],s=e["modal-link-input"];v.showUploadingState(),g.addNewCard({cardElementName:t,cardElementLink:s}).then((e=>{v.showUploaded();const t=L(e);m.addItem(t),u["add-card-form"].disableSubmitButton(),v.close(),v.reset()})).catch((e=>{console.error(e)})).finally((()=>{v.showToUpload}))})),f=new i("#profile-edit-modal",(function(e){const t=e[a],s=e[l];f.showUploadingState(),g.updateUserInfo({editFormNameInput:t,editFormAboutInput:s}).then((e=>{f.showUploaded(),b.setUserInfo(e.name,e.about),f.close(),u["profile-edit-form"].disableSubmitButton(),f.reset()})).catch((e=>{console.error(e)}))})),S=new i("#change-profile-pic-modal",(function(e){S.showUploadingState();const t=e["modal-avatar-input"];g.updateProfileImage(t).then((e=>{S.showUploaded(),console.log(e),b.setAvatar(e.avatar),S.close(),u["change-profile-pic-form"].disableSubmitButton(),S.reset()})).catch((e=>{console.error(e)})).finally((()=>{S.showUploaded()}))})),g=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.baseUrl=t,this._headers=s}getResult(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this._headers}).then(this.getResult)}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this._headers}).then(this.getResult)}updateUserInfo(e){let{editFormNameInput:t,editFormAboutInput:s}=e;return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this.getResult)}addNewCard(e){let{cardElementName:t,cardElementLink:s}=e;return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this.getResult)}deleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.getResult)}likeCard(e){return fetch(`${this.baseUrl}/cards/${e.id}/likes`,{method:"PUT",headers:this._headers}).then(this.getResult)}unlikeCard(e){return fetch(`${this.baseUrl}/cards/${e.id}/likes`,{method:"DELETE",headers:this._headers}).then(this.getResult)}updateProfileImage(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this.getResult)}getCardAndUserInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"62fbc1de-42d6-41b7-8bb5-5b0736932e96","Content-Type":"application/json"}});function L(t){return new e(t,d,k,I,y).getView()}function k(e){let{name:t,link:s}=e;E.open({name:t,link:s})}function y(e){(e.isLiked()?g.unlikeCard(e):g.likeCard(e)).then((t=>{e.setIsLiked(t.isLiked)})).catch((e=>{console.error(e)}))}function I(e){p.open(),p.setSubmitAction((()=>{p.showLoading(),g.deleteCard(e.id).then((t=>{p.close(),e.deleteCard()})).catch((e=>{console.error(e)})).finally((()=>{p.showDeleted()}))}))}g.getCardAndUserInfo().then((e=>{let[t,s]=e;m=new r({items:t,renderer:e=>{const t=L(e);m.addInitialItem(t)}},".cards__list"),m.renderItems(t);const i=s.name,n=s.about,o=s.avatar;b.setUserInfo(i,n),b.setAvatar(o)})).catch((e=>{console.error(e)})),c.addEventListener("click",(()=>{v.open()})),h.addEventListener("click",(()=>{f.open(),function(){const e=b.getUserInfo();f.setInputValues(e)}()})),_.addEventListener("click",(()=>{S.open()})),(e=>{e.forEach((e=>{const s=new t(o,e);return s.enableValidation(),u[e.getAttribute("id")]=s,u}))})(n),v.setEventListeners(),f.setEventListeners(),E.setEventListeners(),S.setEventListeners(),p.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoieUJBQWUsTUFBTUEsRUFDbkJDLFdBQUFBLENBQ0VDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEdBRUFDLEtBQUtDLE1BQVFOLEVBQUtPLEtBQ2xCRixLQUFLRyxNQUFRUixFQUFLUyxLQUNsQkosS0FBS0ssR0FBS1YsRUFBS1csSUFDZk4sS0FBS08sY0FBZ0JYLEVBQ3JCSSxLQUFLUSxNQUFRYixFQUNiSyxLQUFLUyxrQkFBb0JaLEVBQ3pCRyxLQUFLVSxtQkFBcUJaLEVBQzFCRSxLQUFLVyxpQkFBbUJaLEVBQ3hCQyxLQUFLWSxTQUFXakIsRUFBS2tCLE9BQ3ZCLENBQ0FDLFlBQUFBLEdBQ0UsT0FBUWQsS0FBS2UsYUFBZUMsU0FDekJDLGNBQWNqQixLQUFLTyxlQUNuQlcsUUFBUUQsY0FBYyxTQUN0QkUsV0FBVSxFQUNmLENBRUFDLGtCQUFBQSxHQUNFcEIsS0FBS3FCLFNBQVdyQixLQUFLZSxhQUFhRSxjQUFjLGlCQUNoRGpCLEtBQUtzQixVQUFZdEIsS0FBS2UsYUFBYUUsY0FBYyxnQkFDakRqQixLQUFLcUIsU0FBU0UsaUJBQWlCLFNBQVMsS0FDdEN2QixLQUFLVyxpQkFBaUJYLEtBQUssSUFFN0JBLEtBQUtzQixVQUFVQyxpQkFBaUIsU0FBUyxLQUN2Q3ZCLEtBQUtVLG1CQUFtQlYsS0FBSyxJQUUvQkEsS0FBS3dCLGtCQUFrQkQsaUJBQWlCLFNBQVMsS0FDL0N2QixLQUFLUyxrQkFBa0JULEtBQUtRLE1BQU0sR0FFdEMsQ0FDQWlCLFVBQUFBLEdBQ0V6QixLQUFLZSxhQUFhVyxRQUNwQixDQU1BQyxVQUFBQSxDQUFXZCxHQUVUYixLQUFLWSxTQUFXQyxFQUNoQmIsS0FBSzRCLGNBQ1AsQ0FFQWYsT0FBQUEsR0FDRSxPQUFPYixLQUFLWSxRQUNkLENBRUFnQixZQUFBQSxHQUNNNUIsS0FBS1ksU0FFUFosS0FBS3FCLFNBQVNRLFVBQVVDLElBQUksdUJBRzVCOUIsS0FBS3FCLFNBQVNRLFVBQVVILE9BQU8sc0JBRW5DLENBQ0FLLE9BQUFBLEdBUUUsT0FQQS9CLEtBQUtnQyxTQUFXaEMsS0FBS2MsZUFDckJkLEtBQUt3QixrQkFBb0J4QixLQUFLZ0MsU0FBU2YsY0FBYyxnQkFDckRqQixLQUFLZ0MsU0FBU2YsY0FBYyxzQkFBc0JnQixZQUFjakMsS0FBS0MsTUFDckVELEtBQUt3QixrQkFBa0JVLElBQU1sQyxLQUFLRyxNQUNsQ0gsS0FBS3dCLGtCQUFrQlcsSUFBTW5DLEtBQUtDLE1BQ2xDRCxLQUFLb0IscUJBQ0xwQixLQUFLNEIsZUFDRTVCLEtBQUtnQyxRQUNkLEVDMUVhLE1BQU1JLEVBQ25CMUMsV0FBQUEsQ0FBWTJDLEVBQVVDLEdBQ3BCdEMsS0FBS3VDLE1BQVFELEVBQ2J0QyxLQUFLd0MsZUFBaUJILEVBQVNJLGNBQy9CekMsS0FBSzBDLHNCQUF3QkwsRUFBU00scUJBQ3RDM0MsS0FBSzRDLHFCQUF1QlAsRUFBU1Esb0JBQ3JDN0MsS0FBSzhDLGlCQUFtQlQsRUFBU1UsZ0JBQ2pDL0MsS0FBS2dELFlBQWNYLEVBQVNZLFdBQzVCakQsS0FBS2tELFdBQWFiLEVBQVNjLFNBQzdCLENBQ0FDLGVBQUFBLENBQWdCQyxHQUNkckQsS0FBS3NELGdCQUFrQnRELEtBQUt1QyxNQUFNdEIsY0FBZSxJQUFHb0MsRUFBUWhELFlBQzVEZ0QsRUFBUXhCLFVBQVVDLElBQUk5QixLQUFLOEMsa0JBQzNCOUMsS0FBS3NELGdCQUFnQnJCLFlBQWNvQixFQUFRRSxrQkFDM0N2RCxLQUFLc0QsZ0JBQWdCekIsVUFBVUMsSUFBSTlCLEtBQUtnRCxZQUMxQyxDQUNBUSxlQUFBQSxDQUFnQkgsR0FDZHJELEtBQUtzRCxnQkFBa0J0RCxLQUFLdUMsTUFBTXRCLGNBQWUsSUFBR29DLEVBQVFoRCxZQUM1RGdELEVBQVF4QixVQUFVSCxPQUFPMUIsS0FBSzhDLGtCQUM5QjlDLEtBQUtzRCxnQkFBZ0JyQixZQUFjLEdBQ25DakMsS0FBS3NELGdCQUFnQnpCLFVBQVVILE9BQU8xQixLQUFLZ0QsWUFDN0MsQ0FFQVMsbUJBQUFBLENBQW9CSixHQUNsQixJQUFLQSxFQUFRSyxTQUFTQyxNQUNwQixPQUFPM0QsS0FBS29ELGdCQUFnQkMsR0FFOUJyRCxLQUFLd0QsZ0JBQWdCSCxFQUN2QixDQUNBTyxnQkFBQUEsR0FFRSxPQURBNUQsS0FBSzZELG9CQUFzQkMsTUFBTUMsS0FBSy9ELEtBQUtnRSxXQUNwQ2hFLEtBQUs2RCxvQkFBb0JJLE1BQU1aLElBQzVCQSxFQUFRSyxTQUFTQyxPQUU3QixDQUNBTyxpQkFBQUEsR0FDTWxFLEtBQUs0RCxtQkFDUDVELEtBQUttRSx1QkFHUG5FLEtBQUtvRSxjQUFjdkMsVUFBVUgsT0FBTzFCLEtBQUs0QyxzQkFDekM1QyxLQUFLb0UsY0FBY0MsVUFBVyxFQUNoQyxDQUVBakQsa0JBQUFBLEdBQ0VwQixLQUFLZ0UsVUFBWWhFLEtBQUt1QyxNQUFNK0IsaUJBQWlCdEUsS0FBS3dDLGdCQUNsRHhDLEtBQUtvRSxjQUFnQnBFLEtBQUt1QyxNQUFNdEIsY0FBY2pCLEtBQUswQyx1QkFDbkQxQyxLQUFLZ0UsVUFBVU8sU0FBU2xCLElBQ3RCQSxFQUFROUIsaUJBQWlCLFNBQVVpRCxJQUNqQ3hFLEtBQUt5RCxvQkFBb0JKLEdBQ3pCckQsS0FBS2tFLG1CQUFtQixHQUN4QixHQUVOLENBQ0FPLGdCQUFBQSxHQUNFekUsS0FBS3VDLE1BQU1oQixpQkFBaUIsVUFBV2lELElBQ3JDQSxFQUFFRSxnQkFBZ0IsSUFFcEIxRSxLQUFLb0Isb0JBQ1AsQ0FDQXVELGVBQUFBLEdBQ0UzRSxLQUFLZ0UsVUFBVU8sU0FBU2xCLElBQ3RCckQsS0FBS3dELGdCQUFnQkgsRUFBUSxJQUUvQnJELEtBQUtrRSxtQkFDUCxDQUNBQyxtQkFBQUEsR0FDRW5FLEtBQUtvRSxjQUFjdkMsVUFBVUMsSUFBSTlCLEtBQUs0QyxzQkFDdEM1QyxLQUFLb0UsY0FBY0MsVUFBVyxDQUNoQyxFQ3JFYSxNQUFNTyxFQUNuQmxGLFdBQUFBLENBQVltRixHQUNWN0UsS0FBSzhFLGVBQWlCRCxFQUN0QjdFLEtBQUsrRSxjQUFnQi9ELFNBQVNDLGNBQWM0RCxHQUM1QzdFLEtBQUtnRixnQkFBa0JoRixLQUFLZ0YsZ0JBQWdCQyxLQUFLakYsS0FDbkQsQ0FDQWtGLElBQUFBLEdBQ0VsRixLQUFLK0UsY0FBY2xELFVBQVVDLElBQUksZ0JBQ2pDZCxTQUFTTyxpQkFBaUIsVUFBV3ZCLEtBQUtnRixnQkFDNUMsQ0FDQUcsS0FBQUEsR0FDRW5GLEtBQUsrRSxjQUFjbEQsVUFBVUgsT0FBTyxnQkFDcENWLFNBQVNvRSxvQkFBb0IsVUFBV3BGLEtBQUtnRixnQkFDL0MsQ0FDQUEsZUFBQUEsQ0FBZ0JSLEdBQ0EsV0FBVkEsRUFBRWEsS0FDSnJGLEtBQUttRixPQUVULENBQ0FHLGFBQUFBLENBQWNkLEdBQ1JBLEVBQUVlLFNBQVd2RixLQUFLK0UsZUFDcEIvRSxLQUFLbUYsT0FFVCxDQUNBSyxpQkFBQUEsR0FDRXhGLEtBQUsrRSxjQUFjeEQsaUJBQWlCLFNBQVVpRCxJQUM1Q3hFLEtBQUtzRixjQUFjZCxFQUFFLElBRXZCeEUsS0FBS3lGLFVBQVl6RixLQUFLK0UsY0FBYzlELGNBQWMsaUJBQ2xEakIsS0FBS3lGLFVBQVVsRSxpQkFBaUIsU0FBUyxLQUN2Q3ZCLEtBQUttRixPQUFPLEdBRWhCLEVDL0JhLE1BQU1PLFVBQXNCZCxFQUN6Q2xGLFdBQUFBLENBQVltRixFQUFlYyxHQUN6QkMsTUFBTWYsR0FDTjdFLEtBQUs2RixXQUFhN0YsS0FBSytFLGNBQWM5RCxjQUFjLGdCQUNuRGpCLEtBQUs4RixrQkFBb0JILEVBQ3pCM0YsS0FBS2dFLFVBQVloRSxLQUFLNkYsV0FBV3ZCLGlCQUFpQixpQkFDbER0RSxLQUFLK0YsV0FBYS9GLEtBQUsrRSxjQUFjOUQsY0FBYyxnQkFDbkRqQixLQUFLZ0csWUFBY2hHLEtBQUsrRixXQUFXOUQsV0FDckMsQ0FDQWdFLGVBQUFBLEdBS0UsT0FKQWpHLEtBQUtrRyxVQUFZLENBQUMsRUFDbEJsRyxLQUFLZ0UsVUFBVU8sU0FBU2xCLElBQ3RCckQsS0FBS2tHLFVBQVU3QyxFQUFRaEQsSUFBTWdELEVBQVE4QyxLQUFLLElBRXJDbkcsS0FBS2tHLFNBQ2QsQ0FDQUUsS0FBQUEsR0FDRXBHLEtBQUs2RixXQUFXTyxPQUNsQixDQUVBQyxjQUFBQSxDQUFlMUcsR0FDYkssS0FBS2dFLFVBQVVPLFNBQVMrQixJQUN0QkEsRUFBTUgsTUFBUXhHLEVBQUsyRyxFQUFNcEcsS0FBSyxHQUVsQyxDQUVBc0YsaUJBQUFBLEdBQ0VJLE1BQU1KLG9CQUNOeEYsS0FBSzZGLFdBQVd0RSxpQkFBaUIsVUFBV2lELElBQzFDQSxFQUFFRSxpQkFDRjFFLEtBQUs4RixrQkFBa0I5RixLQUFLaUcsa0JBQWtCLEdBRWxELENBQ0FNLGtCQUFBQSxHQUNFdkcsS0FBSytGLFdBQVdTLFVBQVksUUFDOUIsQ0FDQUMsWUFBQUEsR0FDRXpHLEtBQUsrRixXQUFXUyxVQUFZeEcsS0FBS2dHLFdBQ25DLEVDdkNhLE1BQU1VLEVBQ25CaEgsV0FBQUEsQ0FBV2lILEVBQXNCQyxHQUFrQixJQUF2QyxNQUFFQyxFQUFLLFNBQUVDLEdBQVVILEVBQzdCM0csS0FBSytHLGVBQWlCRixFQUN0QjdHLEtBQUtnSCxVQUFZRixFQUNqQjlHLEtBQUtpSCxXQUFhakcsU0FBU0MsY0FBYzJGLEVBQzNDLENBRUFNLE9BQUFBLENBQVFDLEdBQ05uSCxLQUFLaUgsV0FBV0csUUFBUUQsRUFDMUIsQ0FDQUUsY0FBQUEsQ0FBZUYsR0FDYm5ILEtBQUtpSCxXQUFXSyxPQUFPSCxFQUN6QixDQUNBSSxXQUFBQSxDQUFZVixHQUNWQSxFQUFNdEMsU0FBU2lELElBQ2J4SCxLQUFLZ0gsVUFBVVEsRUFBSyxHQUV4QixFQ2ZLLE1BQ01DLEVBQVd6RyxTQUFTc0QsaUJBQWlCLGdCQUNyQ2pDLEVBQVcsQ0FDdEJxRixhQUFjLGVBQ2RqRixjQUFlLGdCQUNmRSxxQkFBc0IsZUFDdEJFLG9CQUFxQix1QkFDckJFLGdCQUFpQiwwQkFDakJFLFdBQVksdUJBQ1pFLFVBQVcsaUJBTUF3RSxFQUFtQixvQkFFbkJDLEdBRG1CNUcsU0FBUzZHLGVBQWVGLEdBQ2xCLDJCQVN6QkcsR0FSeUI5RyxTQUFTNkcsZUFDN0NELEdBTzhCLGtCQUNuQkcsRUFBaUIvRyxTQUFTQyxjQUFjLHdCQUN4QytHLEVBQWFoSCxTQUFTQyxjQUFjLHdCQUVwQ2dILEVBQWlCLENBQUMsRUFHbEJDLEdBRmtCbEgsU0FBU0MsY0FBYyxzQkFDM0JELFNBQVNzRCxpQkFBaUIsZ0JBQ3hCdEQsU0FBU0MsY0FDcEMsZ0NDTUYsSUFBSWtILEVESjJCbkgsU0FBU0MsY0FDdEMsNkJBSTBCRCxTQUFTQyxjQUFjLHNCQUNoQkQsU0FBU0MsY0FDMUMsMkJBR3VCRCxTQUFTQyxjQUFjLG1CQUV4QkQsU0FBU3NELGlCQUFpQixnQkNQbEQsTUFBTThELEVBQWtCLElDMUNULGNBQW9DeEQsRUFDakRsRixXQUFBQSxDQUFZbUYsR0FDVmUsTUFBTWYsR0FDTjdFLEtBQUsrRixXQUFhL0YsS0FBSytFLGNBQWM5RCxjQUFjLGdCQUNuRGpCLEtBQUtxSSxTQUFXckksS0FBSytGLFdBQVc5RCxXQUNsQyxDQUVBcUcsZUFBQUEsQ0FBZ0IzQyxHQUNkM0YsS0FBSzhGLGtCQUFvQkgsQ0FDM0IsQ0FDQTRDLFdBQUFBLEdBQ0V2SSxLQUFLK0YsV0FBV1MsVUFBWSxTQUM5QixDQUNBZ0MsV0FBQUEsR0FDRXhJLEtBQUsrRixXQUFXUyxVQUFZeEcsS0FBSytGLFdBQVc5RCxXQUM5QyxDQUNBdUQsaUJBQUFBLEdBQ0VJLE1BQU1KLG9CQUNOeEYsS0FBSytGLFdBQVd4RSxpQkFBaUIsU0FBVWlELElBQ3pDQSxFQUFFRSxpQkFDRjFFLEtBQUs4RixtQkFBbUIsR0FFNUIsR0ZtQmdDLHNCQ0U1QjJDLEVBQVksSUUzQ0gsY0FBNkI3RCxFQUMxQ2xGLFdBQUFBLENBQVltRixHQUNWZSxNQUFNZixHQUdON0UsS0FBSzBJLFVBQVkxSSxLQUFLK0UsY0FBYzlELGNBQWMsbUJBQ2xEakIsS0FBSzJJLE9BQVMzSSxLQUFLK0UsY0FBYzlELGNBQWMsa0JBQ2pELENBQ0FpRSxJQUFBQSxDQUFJeUIsR0FBaUIsSUFBaEIsS0FBRXpHLEVBQUksS0FBRUUsR0FBTXVHLEVBQ2pCM0csS0FBSzBJLFVBQVV6RyxZQUFjL0IsRUFDN0JGLEtBQUsySSxPQUFPekcsSUFBTTlCLEVBQ2xCSixLQUFLMkksT0FBT3hHLElBQU1qQyxFQUNsQjBGLE1BQU1WLE1BQ1IsR0hpQjhCLG1CQ2MxQjBELEVBQWMsSUc3Q0wsTUFDYmxKLFdBQUFBLENBQVdpSCxHQUFnRCxJQUEvQyxhQUFFa0MsRUFBWSxZQUFFQyxFQUFXLGVBQUVDLEdBQWdCcEMsRUFDdkQzRyxLQUFLZ0osUUFBVWhJLFNBQVNDLGNBQWM0SCxHQUN0QzdJLEtBQUtpSixPQUFTakksU0FBU0MsY0FBYzZILEdBQ3JDOUksS0FBS2tKLFVBQVlsSSxTQUFTQyxjQUFjOEgsRUFDMUMsQ0FDQUksV0FBQUEsR0FLRSxNQUphLENBQ1hDLE1BQU9wSixLQUFLZ0osUUFBUXhDLFVBQ3BCNkMsWUFBYXJKLEtBQUtpSixPQUFPekMsVUFHN0IsQ0FFQThDLFdBQUFBLENBQVlwSixFQUFNcUosR0FDaEJ2SixLQUFLZ0osUUFBUXhDLFVBQVl0RyxFQUN6QkYsS0FBS2lKLE9BQU96QyxVQUFZK0MsQ0FDMUIsQ0FDQUMsU0FBQUEsQ0FBVXBKLEdBQ1JKLEtBQUtrSixVQUFVaEgsSUFBTTlCLENBQ3ZCLEdIeUIrQixDQUFFeUksYURoQ1AsbUJDZ0NxQkMsWUQvQnRCLDBCQytCbUNDLGVESWhDLGVDSHhCVSxFQUFlLElBQUkvRCxFRC9CVywyQkM0SXBDLFNBQTZCZ0UsR0FDM0IsTUFBTUMsRUFBV0QsRURySWdCLDJCQ3NJM0JFLEVBQVdGLEVEckllLG9CQ3NJaENELEVBQWFsRCxxQkFDYnNELEVBQ0dDLFdBQVcsQ0FBRUMsZ0JBQWlCSixFQUFVSyxnQkFBaUJKLElBQ3pESyxNQUFNQyxJQUNMVCxFQUFhaEQsZUFDYixNQUFNMEQsRUFBVUMsRUFBVUYsR0FDMUIvQixFQUFTakIsUUFBUWlELEdBQ2pCbEMsRUQ1SXVCLGlCQzRJTzlELHNCQUM5QnNGLEVBQWF0RSxRQUNic0UsRUFBYXJELE9BQU8sSUFFckJpRSxPQUFPQyxJQUNOQyxRQUFRQyxNQUFNRixFQUFJLElBRW5CRyxTQUFRLEtBQ1BoQixFQUFhaUIsWUFBWSxHQUUvQixJQTdITUMsRUFBWSxJQUFJakYsRURsQ1csdUJDMkdqQyxTQUE2QmdFLEdBQzNCLE1BQU1rQixFQUFTbEIsRUFBUy9CLEdBQ2xCa0QsRUFBUW5CLEVBQVM5QixHQUN2QitDLEVBQVVwRSxxQkFDVnNELEVBQ0dpQixlQUFlLENBQ2RDLGtCQUFtQkgsRUFDbkJJLG1CQUFvQkgsSUFFckJaLE1BQU1nQixJQUNMTixFQUFVbEUsZUFDVm1DLEVBQVlVLFlBQVkyQixFQUFJL0ssS0FBTStLLEVBQUlDLE9BQ3RDUCxFQUFVeEYsUUFDVjhDLEVEN0cyQixxQkM2R085RCxzQkFDbEN3RyxFQUFVdkUsT0FBTyxJQUVsQmlFLE9BQU9DLElBQ05DLFFBQVFDLE1BQU1GLEVBQUksR0FFeEIsSUEzRk1hLEVBQWtCLElBQUl6RixFRFZNLDZCQzZEbEMsU0FBNEJnRSxHQUMxQnlCLEVBQWdCNUUscUJBQ2hCLE1BQU02RSxFQUFhMUIsRUR6RFksc0JDMEQvQkcsRUFDR3dCLG1CQUFtQkQsR0FDbkJuQixNQUFNZ0IsSUFDTEUsRUFBZ0IxRSxlQUNoQjhELFFBQVFlLElBQUlMLEdBQ1pyQyxFQUFZWSxVQUFVeUIsRUFBSU0sUUFDMUJKLEVBQWdCaEcsUUFDaEI4QyxFRHRGc0IsMkJDc0ZPOUQsc0JBQzdCZ0gsRUFBZ0IvRSxPQUFPLElBRXhCaUUsT0FBT0MsSUFDTkMsUUFBUUMsTUFBTUYsRUFBSSxJQUVuQkcsU0FBUSxLQUNQVSxFQUFnQjFFLGNBQWMsR0FFcEMsSUFoRU1vRCxFQUFNLElJekRHLE1BQ2JuSyxXQUFBQSxDQUFXaUgsR0FBdUIsSUFBdEIsUUFBRTZFLEVBQU8sUUFBRUMsR0FBUzlFLEVBQzlCM0csS0FBS3dMLFFBQVVBLEVBQ2Z4TCxLQUFLMEwsU0FBV0QsQ0FDbEIsQ0FFQUUsU0FBQUEsQ0FBVVYsR0FDUixPQUFJQSxFQUFJVyxHQUNDWCxFQUFJWSxPQUdOQyxRQUFRQyxPQUFRLFVBQVNkLEVBQUllLFNBQ3RDLENBRUFDLGVBQUFBLEdBQ0UsT0FBT0MsTUFBTyxHQUFFbE0sS0FBS3dMLGdCQUFpQixDQUNwQ0MsUUFBU3pMLEtBQUswTCxXQUNiekIsS0FBS2pLLEtBQUsyTCxVQUNmLENBRUF4QyxXQUFBQSxHQUNFLE9BQU8rQyxNQUFPLEdBQUVsTSxLQUFLd0wsbUJBQW9CLENBQ3ZDQyxRQUFTekwsS0FBSzBMLFdBQ2J6QixLQUFLakssS0FBSzJMLFVBQ2YsQ0FDQWIsY0FBQUEsQ0FBY3FCLEdBQTRDLElBQTNDLGtCQUFFcEIsRUFBaUIsbUJBQUVDLEdBQW9CbUIsRUFDdEQsT0FBT0QsTUFBTyxHQUFFbE0sS0FBS3dMLG1CQUFvQixDQUN2Q1ksT0FBUSxRQUNSWCxRQUFTekwsS0FBSzBMLFNBQ2RXLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkJyTSxLQUFNNkssRUFDTkcsTUFBT0YsTUFFUmYsS0FBS2pLLEtBQUsyTCxVQUNmLENBQ0E3QixVQUFBQSxDQUFVMEMsR0FBdUMsSUFBdEMsZ0JBQUV6QyxFQUFlLGdCQUFFQyxHQUFpQndDLEVBQzdDLE9BQU9OLE1BQU8sR0FBRWxNLEtBQUt3TCxnQkFBaUIsQ0FDcENZLE9BQVEsT0FDUlgsUUFBU3pMLEtBQUswTCxTQUNkVyxLQUFNQyxLQUFLQyxVQUFVLENBQ25Cck0sS0FBTTZKLEVBQ04zSixLQUFNNEosTUFFUEMsS0FBS2pLLEtBQUsyTCxVQUNmLENBQ0FsSyxVQUFBQSxDQUFXbkIsR0FDVCxPQUFPNEwsTUFBTyxHQUFFbE0sS0FBS3dMLGlCQUFpQmxMLElBQU8sQ0FDM0M4TCxPQUFRLFNBQ1JYLFFBQVN6TCxLQUFLMEwsV0FDYnpCLEtBQUtqSyxLQUFLMkwsVUFHZixDQUVBYyxRQUFBQSxDQUFTdkMsR0FDUCxPQUFPZ0MsTUFBTyxHQUFFbE0sS0FBS3dMLGlCQUFpQnRCLEVBQUs3SixXQUFZLENBQ3JEK0wsT0FBUSxNQUNSWCxRQUFTekwsS0FBSzBMLFdBQ2J6QixLQUFLakssS0FBSzJMLFVBSWYsQ0FDQWUsVUFBQUEsQ0FBV3hDLEdBQ1QsT0FBT2dDLE1BQU8sR0FBRWxNLEtBQUt3TCxpQkFBaUJ0QixFQUFLN0osV0FBWSxDQUNyRCtMLE9BQVEsU0FDUlgsUUFBU3pMLEtBQUswTCxXQUNiekIsS0FBS2pLLEtBQUsyTCxVQUlmLENBQ0FOLGtCQUFBQSxDQUFtQmpMLEdBQ2pCLE9BQU84TCxNQUFPLEdBQUVsTSxLQUFLd0wsMEJBQTJCLENBQzlDWSxPQUFRLFFBQ1JYLFFBQVN6TCxLQUFLMEwsU0FDZFcsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQmhCLE9BQVFuTCxNQUVUNkosS0FBS2pLLEtBQUsyTCxVQUNmLENBQ0FnQixrQkFBQUEsR0FDRSxPQUFPYixRQUFRYyxJQUFJLENBQUM1TSxLQUFLaU0sa0JBQW1Cak0sS0FBS21KLGVBQ25ELEdKMUJrQixDQUNsQnFDLFFBQVMsa0RBQ1RDLFFBQVMsQ0FDUG9CLGNBQWUsdUNBQ2YsZUFBZ0Isc0JBa0ZwQixTQUFTekMsRUFBVTVDLEdBU2pCLE9BUm9CLElBQUkvSCxFQUN0QitILEVBQ0FNLEVBQ0FqSSxFQUNBQyxFQUNBQyxHQUUyQmdDLFNBRS9CLENBd0JBLFNBQVNsQyxFQUFnQnNNLEdBQWlCLElBQWhCLEtBQUVqTSxFQUFJLEtBQUVFLEdBQU0rTCxFQUN0QzFELEVBQVV2RCxLQUFLLENBQUVoRixPQUFNRSxRQUN6QixDQUNBLFNBQVNMLEVBQWdCbUssSUFDREEsRUFBS3JKLFVBQ3ZCZ0osRUFBSTZDLFdBQVd4QyxHQUNmTCxFQUFJNEMsU0FBU3ZDLElBRWRELE1BQU02QyxJQUNMNUMsRUFBS3ZJLFdBQVdtTCxFQUFZak0sUUFBUSxJQUVyQ3dKLE9BQU9DLElBQ05DLFFBQVFDLE1BQU1GLEVBQUksR0FFeEIsQ0FDQSxTQUFTeEssRUFBa0JvSyxHQUN6QjlCLEVBQWdCbEQsT0FDaEJrRCxFQUFnQkUsaUJBQWdCLEtBQzlCRixFQUFnQkcsY0FDaEJzQixFQUNHcEksV0FBV3lJLEVBQUs3SixJQUNoQjRKLE1BQU1nQixJQUNMN0MsRUFBZ0JqRCxRQUNoQitFLEVBQUt6SSxZQUFZLElBRWxCNEksT0FBT0MsSUFDTkMsUUFBUUMsTUFBTUYsRUFBSSxJQUVuQkcsU0FBUSxLQUNQckMsRUFBZ0JJLGFBQWEsR0FDN0IsR0FFUixDQS9JQXFCLEVBQ0c4QyxxQkFDQTFDLE1BQUt0RCxJQUFzQyxJQUFwQ29HLEVBQWdCQyxHQUFlckcsRUFFckN3QixFQUFXLElBQUl6QixFQUNiLENBQ0VHLE1BQU9rRyxFQUNQakcsU0FBV1UsSUFDVCxNQUFNeUYsRUFBVzdDLEVBQVU1QyxHQUMzQlcsRUFBU2QsZUFBZTRGLEVBQVMsR0R6RVIsZ0JDK0UvQjlFLEVBQVNaLFlBQVl3RixHQUlyQixNQUFNN00sRUFBTzhNLEVBQWU5TSxLQUN0QnFKLEVBQU15RCxFQUFlOUIsTUFDckJLLEVBQVN5QixFQUFlekIsT0FFOUIzQyxFQUFZVSxZQUFZcEosRUFBTXFKLEdBQzlCWCxFQUFZWSxVQUFVK0IsRUFBTyxJQUU5QmxCLE9BQU9DLElBQ05DLFFBQVFDLE1BQU1GLEVBQUksSUFtSXRCdEMsRUFBV3pHLGlCQUFpQixTQUFTLEtBQ25Da0ksRUFBYXZFLE1BQU0sSUFFckI2QyxFQUFleEcsaUJBQWlCLFNBQVMsS0FDdkNvSixFQUFVekYsT0FuSVosV0FDRSxNQUFNZ0ksRUFBa0J0RSxFQUFZTyxjQUNwQ3dCLEVBQVV0RSxlQUFlNkcsRUFDM0IsQ0FpSUVDLEVBQXVCLElBRXpCakYsRUFBYzNHLGlCQUFpQixTQUFTLEtBQ3RDNEosRUFBZ0JqRyxNQUFNLElBcEJFdUMsS0FDeEJBLEVBQVNsRCxTQUFTNkksSUFDaEIsTUFBTUMsRUFBZ0IsSUFBSWpMLEVBQWNDLEVBQVUrSyxHQUlsRCxPQUhBQyxFQUFjNUksbUJBQ2R3RCxFQUFlbUYsRUFBS0UsYUFBYSxPQUFTRCxFQUVuQ3BGLENBQWMsR0FDckIsRUFpQkp4RCxDQUFpQmdELEdBQ2pCZ0MsRUFBYWpFLG9CQUNibUYsRUFBVW5GLG9CQUNWaUQsRUFBVWpELG9CQUNWMkYsRUFBZ0IzRixvQkFDaEI0QyxFQUFnQjVDLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvdXRpbHMvQXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBkYXRhLFxuICAgIGNhcmRTZWxlY3RvcixcbiAgICBoYW5kbGVJbWFnZUNsaWNrLFxuICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxuICAgIGhhbmRsZUxpa2VDbGlja1xuICApIHtcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5pZCA9IGRhdGEuX2lkO1xuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcbiAgICB0aGlzLl9kYXRhID0gZGF0YTtcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcbiAgICB0aGlzLl9pc0xpa2VkID0gZGF0YS5pc0xpa2VkO1xuICB9XG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICByZXR1cm4gKHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxuICAgICAgLmNsb25lTm9kZSh0cnVlKSk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fbGlrZUJ0biA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fYnV0dG9uXCIpO1xuICAgIHRoaXMuX3RyYXNoQnRuID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190cmFzaFwiKTtcbiAgICB0aGlzLl9saWtlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sodGhpcyk7XG4gICAgfSk7XG4gICAgdGhpcy5fdHJhc2hCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrKHRoaXMpO1xuICAgIH0pO1xuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcy5fZGF0YSk7XG4gICAgfSk7XG4gIH1cbiAgZGVsZXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgfVxuICAvLyBzZXRMaWtlQWN0aW9uKCkge1xuICAvLyAgIHRoaXMuX2xpa2VCdG4uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2J1dHRvbi1hY3RpdmVcIik7XG4gIC8vICAgdGhpcy5pc0xpa2VkID0gIXRoaXMuaXNMaWtlZDtcbiAgLy8gfVxuXG4gIHNldElzTGlrZWQoaXNMaWtlZCkge1xuICAgIC8vIHNldCBpbnN0YW5jZSB2YXJpYWJsZVxuICAgIHRoaXMuX2lzTGlrZWQgPSBpc0xpa2VkO1xuICAgIHRoaXMuX3JlbmRlckxpa2VzKCk7XG4gIH1cblxuICBpc0xpa2VkKCkge1xuICAgIHJldHVybiB0aGlzLl9pc0xpa2VkO1xuICB9XG5cbiAgX3JlbmRlckxpa2VzKCkge1xuICAgIGlmICh0aGlzLl9pc0xpa2VkKSB7XG4gICAgICAvLyBhZGQgYWN0aXZlIGNsYXNzIHRvIHRoZSBsaWtlIGJ1dHRvblxuICAgICAgdGhpcy5fbGlrZUJ0bi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fYnV0dG9uLWFjdGl2ZVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gcmVtb3ZlIGFjdGl2ZSBjbGFzcyBmcm9tIHRoZSBsaWtlIGJ1dHRvblxuICAgICAgdGhpcy5fbGlrZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fYnV0dG9uLWFjdGl2ZVwiKTtcbiAgICB9XG4gIH1cbiAgZ2V0VmlldygpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2VFbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZXNjcmlwdGlvblwiKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fY2FyZEltYWdlRWxlbWVudC5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZUVsZW1lbnQuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3JlbmRlckxpa2VzKCk7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcbiAgICB0aGlzLl9mb3JtID0gZm9ybUVsZW1lbnQ7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IHNldHRpbmdzLmVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JMaXN0ID0gc2V0dGluZ3MuZXJyb3JMaXN0O1xuICB9XG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsKSB7XG4gICAgdGhpcy5fZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XG4gICAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBpbnB1dEVsLnZhbGlkYXRpb25NZXNzYWdlO1xuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgdGhpcy5fZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xuICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xuICAgIH1cbiAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgfVxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHRoaXMuX2lucHV0RWxlbWVudHNBcnJheSA9IEFycmF5LmZyb20odGhpcy5faW5wdXRFbHMpO1xuICAgIHJldHVybiB0aGlzLl9pbnB1dEVsZW1lbnRzQXJyYXkuc29tZSgoaW5wdXRFbCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkO1xuICAgIH0pO1xuICB9XG4gIHRvZ2dsZUJ1dHRvbnN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2lucHV0RWxzID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xuICAgICAgaW5wdXRFbC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKGUpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvbnN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWwpID0+IHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpO1xuICAgIH0pO1xuICAgIHRoaXMudG9nZ2xlQnV0dG9uc3RhdGUoKTtcbiAgfVxuICBkaXNhYmxlU3VibWl0QnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuICBfaGFuZGxlRXNjQ2xvc2UoZSkge1xuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuICBfY2xpY2tPdmVybGF5KGUpIHtcbiAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMuX3BvcHVwRWxlbWVudCkge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICB0aGlzLl9jbGlja092ZXJsYXkoZSk7XG4gICAgfSk7XG4gICAgdGhpcy5fY2xvc2VCdG4gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XG4gICAgdGhpcy5fY2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5faW5wdXRFbHMgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIik7XG4gICAgdGhpcy5fc3VibWl0QnRuID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3NhdmVcIik7XG4gICAgdGhpcy5fYnV0dG9uVGV4dCA9IHRoaXMuX3N1Ym1pdEJ0bi50ZXh0Q29udGVudDtcbiAgfVxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5faW5wdXRPYmogPSB7fTtcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dE9ialtpbnB1dEVsLmlkXSA9IGlucHV0RWwudmFsdWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXMuX2lucHV0T2JqO1xuICB9XG4gIHJlc2V0KCkge1xuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuICB9XG5cbiAgc2V0SW5wdXRWYWx1ZXMoZGF0YSkge1xuICAgIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC52YWx1ZSA9IGRhdGFbaW5wdXQubmFtZV07XG4gICAgfSk7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgIH0pO1xuICB9XG4gIHNob3dVcGxvYWRpbmdTdGF0ZSgpIHtcbiAgICB0aGlzLl9zdWJtaXRCdG4uaW5uZXJUZXh0ID0gXCJTYXZpbmdcIjtcbiAgfVxuICBzaG93VXBsb2FkZWQoKSB7XG4gICAgdGhpcy5fc3VibWl0QnRuLmlubmVyVGV4dCA9IHRoaXMuX2J1dHRvblRleHQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTbGVjdG9yKSB7XG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtcyA9IGl0ZW1zO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTbGVjdG9yKTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG4gIGFkZEluaXRpYWxJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGVsZW1lbnQpO1xuICB9XG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsIi8qKlRoZSBpbmRleC5qcyBmaWxlIG11c3QgY29udGFpbiBvbmx5IHRoZSBjb2RlIGZvciBzZWxlY3RpbmcgZWxlbWVudHMsIGNyZWF0aW5nIGNsYXNzIGluc3RhbmNlcywgYW5kIGFkZGluZyBzcGVjaWZpYyBldmVudCBsaXN0ZW5lcnMuIE90aGVyIGNvZGUsIHN1Y2ggYXMgdGhlIGFycmF5IG9mIGluaXRpYWwgY2FyZHMgYW5kIGFueSBjb25maWd1cmF0aW9uIG9iamVjdHMgeW91IGFyZSB1c2luZywgc2hvdWxkIGJlIG1vdmVkIHRvIGEgc2VwYXJhdGUgdXRpbHMvY29uc3RhbnRzLmpzIGZpbGUgYW5kIGltcG9ydGVkIGludG8gaW5kZXguanMgKi9cblxuZXhwb3J0IGNvbnN0IGNhcmRXcmFwcGVyU2VsZWN0b3IgPSBcIi5jYXJkc19fbGlzdFwiO1xuZXhwb3J0IGNvbnN0IGZvcm1MaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9fZm9ybVwiKTtcbmV4cG9ydCBjb25zdCBzZXR0aW5ncyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19zYXZlXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX3NhdmVfZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbiAgZXJyb3JMaXN0OiBcIi5tb2RhbF9fZXJyb3JcIixcbn07XG5leHBvcnQgY29uc3QgbmFtZVNlbGVjdG9yID0gXCIjanMtcHJvZmlsZS1uYW1lXCI7XG5leHBvcnQgY29uc3Qgam9iU2VsZWN0b3IgPSBcIiNqcy1wcm9maWxlLWRlc2NyaXB0aW9uXCI7XG5leHBvcnQgY29uc3QgYWRkQ2FyZFBvcHVwU2VsZWN0b3IgPSBcIiNwcm9maWxlLWFkZC1jYXJkLW1vZGFsXCI7XG5leHBvcnQgY29uc3QgZWRpdFBvcHVwU2VsZWN0b3IgPSBcIiNwcm9maWxlLWVkaXQtbW9kYWxcIjtcbmV4cG9ydCBjb25zdCBlZGl0SW5wdXRUaXRsZUlkID0gXCJtb2RhbC10aXRsZS1pbnB1dFwiO1xuZXhwb3J0IGNvbnN0IGVkaXRJbnB1dFRpdGxlRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChlZGl0SW5wdXRUaXRsZUlkKTtcbmV4cG9ydCBjb25zdCBlZGl0SW5wdXREZXNjcmlwdGlvbklkID0gXCJtb2RhbC1kZXNjcmlwdGlvbi1pbnB1dFwiO1xuZXhwb3J0IGNvbnN0IGVkaXRJbnB1dERlc2NyaXB0aW9uRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbiAgZWRpdElucHV0RGVzY3JpcHRpb25JZFxuKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkSW5wdXRUaXRsZUlkID0gXCJtb2RhbC1pbWFnZS10aXRsZS1pbnB1dFwiO1xuZXhwb3J0IGNvbnN0IGFkZENhcmRJbnB1dExpbmtJZCA9IFwibW9kYWwtbGluay1pbnB1dFwiO1xuZXhwb3J0IGNvbnN0IGFkZENhcmRGb3JtSWQgPSBcImFkZC1jYXJkLWZvcm1cIjtcbmV4cG9ydCBjb25zdCBhdmF0YXJGb3JtSWQgPSBcImNoYW5nZS1wcm9maWxlLXBpYy1mb3JtXCI7XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRGb3JtSWQgPSBcInByb2ZpbGUtZWRpdC1mb3JtXCI7XG5leHBvcnQgY29uc3QgY2FyZFRlbXBTZWxlY3RvciA9IFwiI2NhcmQtdGVtcGxhdGVcIjtcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvblwiKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IHBpY1BvcHVwU2VsZWN0b3IgPSBcIiNvcGVuLXBpYy1tb2RhbFwiO1xuZXhwb3J0IGNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XG5leHBvcnQgY29uc3QgZGVsZXRlQ2FyZFBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZWxldGUtY2FyZC1tb2RhbFwiKTtcbmV4cG9ydCBjb25zdCB0cmFzaEJ0bkFyciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2FyZF9fdHJhc2hcIik7XG5leHBvcnQgY29uc3QgYXZhdGFyRWRpdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI3Byb2ZpbGUtYXZhdGFyLWVkaXQtYnV0dG9uXCJcbik7XG5leHBvcnQgY29uc3QgYXZhdGFyRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIjY2hhbmdlLXByb2ZpbGUtcGljLW1vZGFsXCJcbik7XG5leHBvcnQgY29uc3QgYXZhdGFyRWRpdFNlbGVjdG9yID0gXCIjY2hhbmdlLXByb2ZpbGUtcGljLW1vZGFsXCI7XG5leHBvcnQgY29uc3QgZGVsZXRlQ2FyZFNlbGVjdG9yID0gXCIjZGVsZXRlLWNhcmQtbW9kYWxcIjtcbmV4cG9ydCBjb25zdCBkZWxldGVDYXJkRWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIpO1xuZXhwb3J0IGNvbnN0IGRlbGV0ZUNhcmRTdWJtaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIiNkZWxldGUtY2FyZC1zdWJtaXQtYnRuXCJcbik7XG5leHBvcnQgY29uc3QgYXZhdGFyTGlua0lucHV0SWQgPSBcIm1vZGFsLWF2YXRhci1pbnB1dFwiO1xuZXhwb3J0IGNvbnN0IGF2YXRhckltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGhvdG9cIik7XG5leHBvcnQgY29uc3QgYXZhdGFyU2VsZWN0b3IgPSBcIiNqcy1hdmF0YXJcIjtcbmV4cG9ydCBjb25zdCBzYXZlQnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX3NhdmVcIik7XG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXAuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHtcbiAgYXZhdGFyRWRpdEJ0bixcbiAgc2F2ZUJ0bnMsXG4gIGF2YXRhckZvcm1JZCxcbiAgYXZhdGFyU2VsZWN0b3IsXG4gIGF2YXRhckltZyxcbiAgYXZhdGFyTGlua0lucHV0SWQsXG4gIHByb2ZpbGVFZGl0Rm9ybUlkLFxuICBkZWxldGVDYXJkRWwsXG4gIGRlbGV0ZUNhcmRTdWJtaXRCdG4sXG4gIGRlbGV0ZUNhcmRTZWxlY3RvcixcbiAgYXZhdGFyRWRpdFNlbGVjdG9yLFxuICBzZXR0aW5ncyxcbiAgZm9ybVZhbGlkYXRvcnMsXG4gIHBpY1BvcHVwU2VsZWN0b3IsXG4gIHByb2ZpbGVFZGl0QnRuLFxuICBhZGRDYXJkQnRuLFxuICBmb3JtTGlzdCxcbiAgYWRkQ2FyZElucHV0VGl0bGVJZCxcbiAgYWRkQ2FyZElucHV0TGlua0lkLFxuICBjYXJkVGVtcFNlbGVjdG9yLFxuICBhZGRDYXJkRm9ybUlkLFxuICBlZGl0SW5wdXRUaXRsZUlkLFxuICBlZGl0SW5wdXREZXNjcmlwdGlvbklkLFxuICBhZGRDYXJkUG9wdXBTZWxlY3RvcixcbiAgZWRpdFBvcHVwU2VsZWN0b3IsXG4gIG5hbWVTZWxlY3RvcixcbiAgam9iU2VsZWN0b3IsXG4gIGNhcmRXcmFwcGVyU2VsZWN0b3IsXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanNcIjtcblxuLy8gZWxlbWVudHNcbmxldCBjYXJkTGlzdDtcbmNvbnN0IGRlbGV0ZUNhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oZGVsZXRlQ2FyZFNlbGVjdG9yKTtcbmNvbnN0IGltYWdlSW5mbyA9IG5ldyBQb3B1cFdpdGhJbWFnZShwaWNQb3B1cFNlbGVjdG9yKTtcbmNvbnN0IHVzZXJQcm9maWxlID0gbmV3IFVzZXJJbmZvKHsgbmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSk7XG5jb25zdCBhZGRDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcbiAgYWRkQ2FyZFBvcHVwU2VsZWN0b3IsXG4gIGhhbmRsZUFkZENhcmRTdWJtaXRcbik7XG5jb25zdCBlZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShlZGl0UG9wdXBTZWxlY3RvciwgaGFuZGxlUHJvZmlsZVN1Ym1pdCk7XG5jb25zdCBhdmF0YXJFZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcbiAgYXZhdGFyRWRpdFNlbGVjdG9yLFxuICBoYW5kbGVBdmF0YXJTdWJtaXRcbik7XG5cbi8vIGFwaVxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiNjJmYmMxZGUtNDJkNi00MWI3LThiYjUtNWIwNzM2OTMyZTk2XCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcblxuLy8gcHJvbWlzZS5hbGxcbmFwaVxuICAuZ2V0Q2FyZEFuZFVzZXJJbmZvKClcbiAgLnRoZW4oKFtzZXJ2ZXJDYXJkTGlzdCwgc2VydmVyVXNlckluZm9dKSA9PiB7XG4gICAgLy8gbG9hZCBjYXJkcyBmcm9tIHNlcnZlclxuICAgIGNhcmRMaXN0ID0gbmV3IFNlY3Rpb24oXG4gICAgICB7XG4gICAgICAgIGl0ZW1zOiBzZXJ2ZXJDYXJkTGlzdCxcbiAgICAgICAgcmVuZGVyZXI6IChpdGVtKSA9PiB7XG4gICAgICAgICAgY29uc3QgY2FyZEl0ZW0gPSBjcmVhdENhcmQoaXRlbSk7XG4gICAgICAgICAgY2FyZExpc3QuYWRkSW5pdGlhbEl0ZW0oY2FyZEl0ZW0pO1xuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIGNhcmRXcmFwcGVyU2VsZWN0b3JcbiAgICApO1xuICAgIC8vIGFkZCBpbml0aWFsIGNhcmRzIHRvIERPTVxuICAgIGNhcmRMaXN0LnJlbmRlckl0ZW1zKHNlcnZlckNhcmRMaXN0KTtcbiAgICAvL2xpa2VCdG4gYWN0aXZlIGlmIGlzTGlrZWQ9dHJ1ZVxuXG4gICAgLy8gbG9hZCB1c2VyIGJpbyBmcm9tIHNlcnZlclxuICAgIGNvbnN0IG5hbWUgPSBzZXJ2ZXJVc2VySW5mby5uYW1lO1xuICAgIGNvbnN0IGpvYiA9IHNlcnZlclVzZXJJbmZvLmFib3V0O1xuICAgIGNvbnN0IGF2YXRhciA9IHNlcnZlclVzZXJJbmZvLmF2YXRhcjtcbiAgICAvLyBhZGQgdXNlciBiaW8gdG8gRE9NXG4gICAgdXNlclByb2ZpbGUuc2V0VXNlckluZm8obmFtZSwgam9iKTtcbiAgICB1c2VyUHJvZmlsZS5zZXRBdmF0YXIoYXZhdGFyKTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH0pO1xuLy8gaGFuZGxlclxuXG5mdW5jdGlvbiBoYW5kbGVBc3NpZ25FZGl0SW5wdXQoKSB7XG4gIGNvbnN0IHVzZXJQcm9maWxlRGF0YSA9IHVzZXJQcm9maWxlLmdldFVzZXJJbmZvKCk7XG4gIGVkaXRQb3B1cC5zZXRJbnB1dFZhbHVlcyh1c2VyUHJvZmlsZURhdGEpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVBdmF0YXJTdWJtaXQoaW5wdXRPYmopIHtcbiAgYXZhdGFyRWRpdFBvcHVwLnNob3dVcGxvYWRpbmdTdGF0ZSgpO1xuICBjb25zdCBhdmF0YXJMaW5rID0gaW5wdXRPYmpbYXZhdGFyTGlua0lucHV0SWRdO1xuICBhcGlcbiAgICAudXBkYXRlUHJvZmlsZUltYWdlKGF2YXRhckxpbmspXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgYXZhdGFyRWRpdFBvcHVwLnNob3dVcGxvYWRlZCgpO1xuICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgIHVzZXJQcm9maWxlLnNldEF2YXRhcihyZXMuYXZhdGFyKTtcbiAgICAgIGF2YXRhckVkaXRQb3B1cC5jbG9zZSgpO1xuICAgICAgZm9ybVZhbGlkYXRvcnNbYXZhdGFyRm9ybUlkXS5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XG4gICAgICBhdmF0YXJFZGl0UG9wdXAucmVzZXQoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBhdmF0YXJFZGl0UG9wdXAuc2hvd1VwbG9hZGVkKCk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVTdWJtaXQoaW5wdXRPYmopIHtcbiAgY29uc3QgbmFtZUVsID0gaW5wdXRPYmpbZWRpdElucHV0VGl0bGVJZF07XG4gIGNvbnN0IGpvYkVsID0gaW5wdXRPYmpbZWRpdElucHV0RGVzY3JpcHRpb25JZF07XG4gIGVkaXRQb3B1cC5zaG93VXBsb2FkaW5nU3RhdGUoKTtcbiAgYXBpXG4gICAgLnVwZGF0ZVVzZXJJbmZvKHtcbiAgICAgIGVkaXRGb3JtTmFtZUlucHV0OiBuYW1lRWwsXG4gICAgICBlZGl0Rm9ybUFib3V0SW5wdXQ6IGpvYkVsLFxuICAgIH0pXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgZWRpdFBvcHVwLnNob3dVcGxvYWRlZCgpO1xuICAgICAgdXNlclByb2ZpbGUuc2V0VXNlckluZm8ocmVzLm5hbWUsIHJlcy5hYm91dCk7IC8vIGdldCB1c2VyaW5mbyBmcm9tIHNlcnZlciBhbmQgYXBwbHkgdG8gcHJvZmlsZVxuICAgICAgZWRpdFBvcHVwLmNsb3NlKCk7XG4gICAgICBmb3JtVmFsaWRhdG9yc1twcm9maWxlRWRpdEZvcm1JZF0uZGlzYWJsZVN1Ym1pdEJ1dHRvbigpO1xuICAgICAgZWRpdFBvcHVwLnJlc2V0KCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRDYXJkKGl0ZW0pIHtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBuZXcgQ2FyZChcbiAgICBpdGVtLFxuICAgIGNhcmRUZW1wU2VsZWN0b3IsXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcbiAgICBoYW5kbGVEZWxldGVDbGljayxcbiAgICBoYW5kbGVMaWtlQ2xpY2tcbiAgKTtcbiAgY29uc3QgY2FyZEl0ZW0gPSBjYXJkRWxlbWVudC5nZXRWaWV3KCk7XG4gIHJldHVybiBjYXJkSXRlbTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZFN1Ym1pdChpbnB1dE9iaikge1xuICBjb25zdCBjYXJkTmFtZSA9IGlucHV0T2JqW2FkZENhcmRJbnB1dFRpdGxlSWRdO1xuICBjb25zdCBjYXJkTGluayA9IGlucHV0T2JqW2FkZENhcmRJbnB1dExpbmtJZF07XG4gIGFkZENhcmRQb3B1cC5zaG93VXBsb2FkaW5nU3RhdGUoKTtcbiAgYXBpXG4gICAgLmFkZE5ld0NhcmQoeyBjYXJkRWxlbWVudE5hbWU6IGNhcmROYW1lLCBjYXJkRWxlbWVudExpbms6IGNhcmRMaW5rIH0pXG4gICAgLnRoZW4oKGNhcmQpID0+IHtcbiAgICAgIGFkZENhcmRQb3B1cC5zaG93VXBsb2FkZWQoKTtcbiAgICAgIGNvbnN0IG5ld0NhcmQgPSBjcmVhdENhcmQoY2FyZCk7XG4gICAgICBjYXJkTGlzdC5hZGRJdGVtKG5ld0NhcmQpO1xuICAgICAgZm9ybVZhbGlkYXRvcnNbYWRkQ2FyZEZvcm1JZF0uZGlzYWJsZVN1Ym1pdEJ1dHRvbigpO1xuICAgICAgYWRkQ2FyZFBvcHVwLmNsb3NlKCk7XG4gICAgICBhZGRDYXJkUG9wdXAucmVzZXQoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBhZGRDYXJkUG9wdXAuc2hvd1RvVXBsb2FkO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKHsgbmFtZSwgbGluayB9KSB7XG4gIGltYWdlSW5mby5vcGVuKHsgbmFtZSwgbGluayB9KTtcbn1cbmZ1bmN0aW9uIGhhbmRsZUxpa2VDbGljayhjYXJkKSB7XG4gIGNvbnN0IGFjdGlvblByb21pc2UgPSBjYXJkLmlzTGlrZWQoKVxuICAgID8gYXBpLnVubGlrZUNhcmQoY2FyZClcbiAgICA6IGFwaS5saWtlQ2FyZChjYXJkKTtcbiAgYWN0aW9uUHJvbWlzZVxuICAgIC50aGVuKCh1cGRhdGVkQ2FyZCkgPT4ge1xuICAgICAgY2FyZC5zZXRJc0xpa2VkKHVwZGF0ZWRDYXJkLmlzTGlrZWQpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNsaWNrKGNhcmQpIHtcbiAgZGVsZXRlQ2FyZFBvcHVwLm9wZW4oKTtcbiAgZGVsZXRlQ2FyZFBvcHVwLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XG4gICAgZGVsZXRlQ2FyZFBvcHVwLnNob3dMb2FkaW5nKCk7XG4gICAgYXBpXG4gICAgICAuZGVsZXRlQ2FyZChjYXJkLmlkKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBkZWxldGVDYXJkUG9wdXAuY2xvc2UoKTtcbiAgICAgICAgY2FyZC5kZWxldGVDYXJkKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgfSlcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgZGVsZXRlQ2FyZFBvcHVwLnNob3dEZWxldGVkKCk7XG4gICAgICB9KTtcbiAgfSk7XG59XG5cbi8vIGZvcm0gdmFsaWRhdGlvblxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChmb3JtTGlzdCkgPT4ge1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtKSA9PiB7XG4gICAgY29uc3QgZm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBmb3JtKTtcbiAgICBmb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbiAgICBmb3JtVmFsaWRhdG9yc1tmb3JtLmdldEF0dHJpYnV0ZShcImlkXCIpXSA9IGZvcm1WYWxpZGF0b3I7XG5cbiAgICByZXR1cm4gZm9ybVZhbGlkYXRvcnM7XG4gIH0pO1xufTtcblxuLy8gZnVuY3Rpb24gY2FsbHMgYW5kIGV2ZW50IGxpc3RlbmVyc1xuXG5hZGRDYXJkQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGFkZENhcmRQb3B1cC5vcGVuKCk7XG59KTtcbnByb2ZpbGVFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGVkaXRQb3B1cC5vcGVuKCk7XG4gIGhhbmRsZUFzc2lnbkVkaXRJbnB1dCgpO1xufSk7XG5hdmF0YXJFZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGF2YXRhckVkaXRQb3B1cC5vcGVuKCk7XG59KTtcblxuLy8gc2V0RXZlbnRMaXN0ZW5lcnNcbmVuYWJsZVZhbGlkYXRpb24oZm9ybUxpc3QpO1xuYWRkQ2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5lZGl0UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmltYWdlSW5mby5zZXRFdmVudExpc3RlbmVycygpO1xuYXZhdGFyRWRpdFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5kZWxldGVDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fc3VibWl0QnRuID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3NhdmVcIik7XG4gICAgdGhpcy5fYnRuVGV4dCA9IHRoaXMuX3N1Ym1pdEJ0bi50ZXh0Q29udGVudDtcbiAgfVxuXG4gIHNldFN1Ym1pdEFjdGlvbihoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gIH1cbiAgc2hvd0xvYWRpbmcoKSB7XG4gICAgdGhpcy5fc3VibWl0QnRuLmlubmVyVGV4dCA9IFwiTG9hZGluZ1wiO1xuICB9XG4gIHNob3dEZWxldGVkKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ0bi5pbm5lclRleHQgPSB0aGlzLl9zdWJtaXRCdG4udGV4dENvbnRlbnQ7XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9zdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICAvLyB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICAvLyB0aGlzLl9saW5rID0gbGluaztcbiAgICB0aGlzLl9waWNUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI29wZW4tcGljLXRpdGxlXCIpO1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjb3Blbi1waWMtaW1hZ2VcIik7XG4gIH1cbiAgb3Blbih7IG5hbWUsIGxpbmsgfSkge1xuICAgIHRoaXMuX3BpY1RpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl9pbWFnZS5zcmMgPSBsaW5rO1xuICAgIHRoaXMuX2ltYWdlLmFsdCA9IG5hbWU7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX25hbWVFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcbiAgICB0aGlzLl9qb2JFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xuICAgIHRoaXMuX2F2YXRhckVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XG4gIH1cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIHRpdGxlOiB0aGlzLl9uYW1lRWwuaW5uZXJUZXh0LFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuX2pvYkVsLmlubmVyVGV4dCxcbiAgICB9O1xuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgc2V0VXNlckluZm8obmFtZSwgam9iKSB7XG4gICAgdGhpcy5fbmFtZUVsLmlubmVyVGV4dCA9IG5hbWU7XG4gICAgdGhpcy5fam9iRWwuaW5uZXJUZXh0ID0gam9iO1xuICB9XG4gIHNldEF2YXRhcihsaW5rKSB7XG4gICAgdGhpcy5fYXZhdGFyRWwuc3JjID0gbGluaztcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcbiAgICB0aGlzLmJhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgZ2V0UmVzdWx0KHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgfVxuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLmdldFJlc3VsdCk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLmdldFJlc3VsdCk7XG4gIH1cbiAgdXBkYXRlVXNlckluZm8oeyBlZGl0Rm9ybU5hbWVJbnB1dCwgZWRpdEZvcm1BYm91dElucHV0IH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogZWRpdEZvcm1OYW1lSW5wdXQsXG4gICAgICAgIGFib3V0OiBlZGl0Rm9ybUFib3V0SW5wdXQsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuZ2V0UmVzdWx0KTtcbiAgfVxuICBhZGROZXdDYXJkKHsgY2FyZEVsZW1lbnROYW1lLCBjYXJkRWxlbWVudExpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IGNhcmRFbGVtZW50TmFtZSxcbiAgICAgICAgbGluazogY2FyZEVsZW1lbnRMaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLmdldFJlc3VsdCk7XG4gIH1cbiAgZGVsZXRlQ2FyZChfaWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkcy8ke19pZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5nZXRSZXN1bHQpO1xuXG4gICAgLy9yZXNwb25zZSBpcyB7XCJtZXNzYWdlXCI6IFwiVGhpcyBwb3N0IGhhcyBiZWVuIGRlbGV0ZWRcIn1cbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkcy8ke2NhcmQuaWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuZ2V0UmVzdWx0KTtcbiAgICAvLyAudGhlbigoY2FyZCkgPT4ge1xuICAgIC8vICAgY29uc29sZS5sb2coY2FyZCk7XG4gICAgLy8gfSk7XG4gIH1cbiAgdW5saWtlQ2FyZChjYXJkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvJHtjYXJkLmlkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLmdldFJlc3VsdCk7XG4gICAgLy8gLnRoZW4oKGNhcmQpID0+IHtcbiAgICAvLyAgIGNvbnNvbGUubG9nKGNhcmQpO1xuICAgIC8vIH0pO1xuICB9XG4gIHVwZGF0ZVByb2ZpbGVJbWFnZShsaW5rKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXI6IGxpbmssXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuZ2V0UmVzdWx0KTtcbiAgfVxuICBnZXRDYXJkQW5kVXNlckluZm8oKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldEluaXRpYWxDYXJkcygpLCB0aGlzLmdldFVzZXJJbmZvKCldKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiaWQiLCJfaWQiLCJfY2FyZFNlbGVjdG9yIiwiX2RhdGEiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfaXNMaWtlZCIsImlzTGlrZWQiLCJfZ2V0VGVtcGxhdGUiLCJfY2FyZEVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2xpa2VCdG4iLCJfdHJhc2hCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiX2NhcmRJbWFnZUVsZW1lbnQiLCJkZWxldGVDYXJkIiwicmVtb3ZlIiwic2V0SXNMaWtlZCIsIl9yZW5kZXJMaWtlcyIsImNsYXNzTGlzdCIsImFkZCIsImdldFZpZXciLCJfZWxlbWVudCIsInRleHRDb250ZW50Iiwic3JjIiwiYWx0IiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfZm9ybSIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9lcnJvckxpc3QiLCJlcnJvckxpc3QiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsIiwiX2Vycm9yTWVzc2FnZUVsIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfaW5wdXRFbGVtZW50c0FycmF5IiwiQXJyYXkiLCJmcm9tIiwiX2lucHV0RWxzIiwic29tZSIsInRvZ2dsZUJ1dHRvbnN0YXRlIiwiZGlzYWJsZVN1Ym1pdEJ1dHRvbiIsIl9zdWJtaXRCdXR0b24iLCJkaXNhYmxlZCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZSIsImVuYWJsZVZhbGlkYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJvcGVuIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5IiwiX2NsaWNrT3ZlcmxheSIsInRhcmdldCIsInNldEV2ZW50TGlzdGVuZXJzIiwiX2Nsb3NlQnRuIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9zdWJtaXRCdG4iLCJfYnV0dG9uVGV4dCIsIl9nZXRJbnB1dFZhbHVlcyIsIl9pbnB1dE9iaiIsInZhbHVlIiwicmVzZXQiLCJzZXRJbnB1dFZhbHVlcyIsImlucHV0Iiwic2hvd1VwbG9hZGluZ1N0YXRlIiwiaW5uZXJUZXh0Iiwic2hvd1VwbG9hZGVkIiwiU2VjdGlvbiIsIl9yZWYiLCJjb250YWluZXJTbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlZEl0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsImFkZEluaXRpYWxJdGVtIiwiYXBwZW5kIiwicmVuZGVySXRlbXMiLCJpdGVtIiwiZm9ybUxpc3QiLCJmb3JtU2VsZWN0b3IiLCJlZGl0SW5wdXRUaXRsZUlkIiwiZWRpdElucHV0RGVzY3JpcHRpb25JZCIsImdldEVsZW1lbnRCeUlkIiwiY2FyZFRlbXBTZWxlY3RvciIsInByb2ZpbGVFZGl0QnRuIiwiYWRkQ2FyZEJ0biIsImZvcm1WYWxpZGF0b3JzIiwiYXZhdGFyRWRpdEJ0biIsImNhcmRMaXN0IiwiZGVsZXRlQ2FyZFBvcHVwIiwiX2J0blRleHQiLCJzZXRTdWJtaXRBY3Rpb24iLCJzaG93TG9hZGluZyIsInNob3dEZWxldGVkIiwiaW1hZ2VJbmZvIiwiX3BpY1RpdGxlIiwiX2ltYWdlIiwidXNlclByb2ZpbGUiLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX25hbWVFbCIsIl9qb2JFbCIsIl9hdmF0YXJFbCIsImdldFVzZXJJbmZvIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInNldFVzZXJJbmZvIiwiam9iIiwic2V0QXZhdGFyIiwiYWRkQ2FyZFBvcHVwIiwiaW5wdXRPYmoiLCJjYXJkTmFtZSIsImNhcmRMaW5rIiwiYXBpIiwiYWRkTmV3Q2FyZCIsImNhcmRFbGVtZW50TmFtZSIsImNhcmRFbGVtZW50TGluayIsInRoZW4iLCJjYXJkIiwibmV3Q2FyZCIsImNyZWF0Q2FyZCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiZmluYWxseSIsInNob3dUb1VwbG9hZCIsImVkaXRQb3B1cCIsIm5hbWVFbCIsImpvYkVsIiwidXBkYXRlVXNlckluZm8iLCJlZGl0Rm9ybU5hbWVJbnB1dCIsImVkaXRGb3JtQWJvdXRJbnB1dCIsInJlcyIsImFib3V0IiwiYXZhdGFyRWRpdFBvcHVwIiwiYXZhdGFyTGluayIsInVwZGF0ZVByb2ZpbGVJbWFnZSIsImxvZyIsImF2YXRhciIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2hlYWRlcnMiLCJnZXRSZXN1bHQiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJfcmVmMiIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiX3JlZjMiLCJsaWtlQ2FyZCIsInVubGlrZUNhcmQiLCJnZXRDYXJkQW5kVXNlckluZm8iLCJhbGwiLCJhdXRob3JpemF0aW9uIiwidXBkYXRlZENhcmQiLCJzZXJ2ZXJDYXJkTGlzdCIsInNlcnZlclVzZXJJbmZvIiwiY2FyZEl0ZW0iLCJ1c2VyUHJvZmlsZURhdGEiLCJoYW5kbGVBc3NpZ25FZGl0SW5wdXQiLCJmb3JtIiwiZm9ybVZhbGlkYXRvciIsImdldEF0dHJpYnV0ZSJdLCJzb3VyY2VSb290IjoiIn0=